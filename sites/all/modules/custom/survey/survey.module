<?php
/**
 * Created by PhpStorm.
 * User: jonaskortum
 * Date: 16.02.17
 * Time: 10:21
 */


function survey_menu()
{

    $items['start_survey'] = array(
        'title' => 'Umfrage starten',
        'access callback' => true,
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('survey_start_form'),
    );

    $items['survey_question/%/%'] = array(
        'access callback' => true,
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('survey_form'),
    );

    $items['survey_question_evaluation/%/%'] = array(
        'access callback' => true,
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('survey_question_evaluation_form'),
        'file' => 'survey_question_evaluation.inc'
    );

    $items['finish_survey/%'] = array(
        'title' => 'Ende der Umfrage',
        'access callback' => true,
        'access callback' => 'user_is_logged_in',
        'page callback' => 'survey_finish_survey',
    );

    $items['add_questions/%'] = array(
        'access callback' => true,
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('survey_add_question_form'),
        'file' => 'survey_add_question.inc'
    );

    $items['question_overview'] = array(
        'access callback' => true,
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('survey_question_overview_form'),
        'file' => 'survey_question_overview.inc'
    );

    $items['delete_question/%'] = array(
        'access callback' => true,
        'access callback' => 'user_is_logged_in',
        'page callback' => 'survey_delete_question',
        'file' => 'survey_question_overview.inc'
    );

    $items['change_question/%/%'] = array(
        'access callback' => true,
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('survey_change_question_form'),
        'file' => 'survey_add_question.inc'
    );

    return $items;
}

function survey_finish_survey()
{
    return "Danke für Ihre Teilnahme, die Umfrage ist nun beendet!";
}

function survey_get_all_questions()
{
    $questions = array();
    $sql = "SELECT * FROM {question} ORDER BY question_id";
    $result = db_query($sql);

    foreach ($result as $item) {
        array_push($questions, $item);
    }

    return $questions;
}

function survey_get_answers_from_question($question_id)
{
    $answers = array();
    $sql = "SELECT * FROM {question_possible_answers} WHERE question_id = " . $question_id. " ORDER BY answers_id";
    drupal_set_message($sql);
    $result = db_query($sql);
    foreach ($result as $item) {
        array_push($answers, $item);
    }

    return $answers;
}

function survey_form()
{
    $user_pw = arg(2);
    $question = arg(1);

    $form = "";
    $user_answers = survey_get_answers();

    $questions = survey_get_all_questions();
    $quantity = sizeof($questions);

    if (survey_check_valid_user_pw($user_pw) && $quantity >= $question) {
        $text = $questions[$question - 1]->title;
        $headline = "<h1>Frage " . $question . "(a)</h1><h2>" . $text . "</h2><br><br>";


        $form['test']['form_item'] = array(
            '#type' => 'markup',
            '#title' => t('My Form Item'),
            '#prefix' => $headline,
        );

        $answers = survey_get_answers_from_question($questions[$question - 1]->question_id);
        $test = array(1 => "", 2 => "", 3 => "", 4 => "", 5 => "", 6 => "");

        for ($i = 0; $i < sizeof($answers); $i++) {

            if(!isset($user_answers[$i]->answer)) {
                $default_value = "";
            } else {
                $default_value = $user_answers[$i]->answer;
            }


            if ($answers[$i]->isRadioButton) {
                $form['dim' . $i] = array(
                    '#type' => 'radios',
                    '#prefix' => '<div id ="visualization' . $i . '">',
                    '#title' => $answers[$i]->description,
                    '#default_value' => $default_value,
                    '#required' => TRUE,
                    '#options' => $test,
                );
            } else {


                $form['quantity' . $i] = array(
                    '#type' => 'textfield',
                    '#title' => $answers[$i]->description,
                    '#size' => 2,
                    '#maxlength' => 2,
                    '#default_value' => $default_value,
                );
            }
        }


        if($question == 1) {
        } else {
            $form['back'] = array(
                '#type' => 'submit',
                '#value' => 'Zurück',
                '#submit' => array('survey_get_back_to_start')
            );
        }



        $form['submit'] = array(
            '#type' => 'submit',
            '#value' => 'Weiter',
            '#submit' => array('survey_get_evaluation')
        );

    }

    return $form;

}

function survey_get_back_to_start()
{

    $question_id = arg(1);
    $user_pw = arg(2);

    drupal_set_message($question_id);
    drupal_set_message($user_pw);

    if($question_id == 1) {
        drupal_goto("");
    } else {
        $question_id--;
        drupal_goto("survey_question_evaluation/".$question_id."/".$user_pw);
    }

}

function survey_get_evaluation($form, &$form_state)
{

    $question = arg(1);
    $user_pw = arg(2);

    $questions = survey_get_all_questions();
    $answers = survey_get_answers_from_question($questions[$question - 1]->question_id);

    for ($i = 0; $i < sizeof($answers); $i++) {

        if ($answers[$i]->isRadioButton) {
            $dim1 = $form_state['values']['dim' . $i];
        } else {

            $dim1 = $form_state['values']['quantity' . $i];
        }

        $sql = "SELECT * FROM {question_user_answers} WHERE answer_id = ".$i." AND question_id = ".$question. " AND user_pw = '".$user_pw."'";
        $result = db_query($sql);

        if($result->rowCount()) {
            $sql = "UPDATE {question_user_answers} SET answer = ".$dim1." WHERE answer_id = ".$i." AND question_id = ".$question." AND user_pw = '".$user_pw."' ";
            db_query($sql);
        } else {
            db_insert('question_user_answers')
                ->fields(array(
                    'question_id' => $question,
                    'answer_id' => $i,
                    'answer' => $dim1,
                    'user_pw' => $user_pw,
                ))
                ->execute();
        }
    }
    drupal_goto("survey_question_evaluation/".$question."/".$user_pw);
}

function survey_start_form()
{
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Start',
        '#submit' => array('survey_start_survey')
    );

    return $form;
}

function survey_start_survey()
{
    $string = survey_generateRandomString(30);
    $sql = "INSERT INTO {survey_users} (user_pw) VALUES ('" . $string . "')";
    db_query($sql);


    $id = survey_get_questions(0);
    drupal_goto("survey_question/" . $id . "/" . $string);
}

function survey_generateRandomString($length)
{
    $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    $charactersLength = strlen($characters);
    $randomString = '';
    for ($i = 0; $i < $length; $i++) {
        $randomString .= $characters[rand(0, $charactersLength - 1)];
    }
    return $randomString;
}

function survey_get_answers()
{
    $question = arg(1);
    $user_id = arg(2);
    $object = array();
    $sql = "SELECT * FROM {question_user_answers} WHERE user_pw = '" . $user_id . "' AND question_id = ".$question;
    $result = db_query($sql);

    foreach ($result as $item) {
        array_push($object, $item);
    }


    return $object;

}

function survey_check_valid_user_pw($user_pw)
{

    $counter = 0;
    $sql = "SELECT * FROM {survey_users} WHERE user_pw = '" . $user_pw . "'";
    $result = db_query($sql);
    foreach ($result as $item) {
        $counter++;
    }

    if ($counter == 1) {
        return true;
    } else {
        return false;
    }
}

function survey_get_questions($current)
{

    $questions = array();
    $sql = "SELECT * FROM {question} ORDER BY question_id";
    $result = db_query($sql);

    foreach ($result as $item) {
        array_push($questions, $item);
    }


    if(sizeof($questions) >= $current+1) {
        return $current+1;
    } else {
        return -1;
    }
}
