<?php
/**
 * Created by PhpStorm.
 * User: jonaskortum
 * Date: 16.02.17
 * Time: 10:21
 */

require_once("survey_question_evaluation.inc");

function survey_menu()
{

    $items['start_survey'] = array(
        'title' => 'Umfrage starten',
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('survey_start_form'),
    );

    $items['survey_question/%/%'] = array(
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('survey_form'),
        'file' => 'survey_answer_question.inc'
    );

    $items['survey_question_evaluation/%/%'] = array(
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('survey_question_evaluation_form'),
        'file' => 'survey_question_evaluation.inc'
    );

    $items['finish_survey/%'] = array(
        'title' => 'Ende der Umfrage',
        'access callback' => 'user_is_logged_in',
        'page callback' => 'survey_finish_survey',
    );

    $items['add_questions/%'] = array(
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('survey_add_question_form'),
        'file' => 'survey_add_question.inc'
    );

    $items['question_overview'] = array(
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('survey_question_overview_form'),
        'file' => 'survey_question_overview.inc'
    );

    $items['delete_question/%'] = array(
        'access callback' => 'user_is_logged_in',
        'page callback' => 'survey_delete_question',
        'file' => 'survey_question_overview.inc'
    );

    $items['change_question/%/%'] = array(
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('survey_change_question_form'),
        'file' => 'survey_add_question.inc'
    );

    return $items;
}

/*
 * Diese Funktion führt den Nutzer zurück ins Hauptmenü
 */
function survey_finish_survey()
{
    return "Danke für Ihre Teilnahme, die Umfrage ist nun beendet!";
}

/*
 * Diese Funktion lädt alle verfügbaren Fragen der Umfrage aus der Datenbank und sortiert sie nach der ID
 * aufsteigend
 */
function survey_get_all_questions()
{
    $questions = array();
    $sql = "SELECT * FROM {question} ORDER BY question_id";
    $question_result = db_query($sql);

    foreach ($question_result as $question) {
        array_push($questions, $question);
    }

    return $questions;
}

/*
 * Diese Funktion ermittelt alle verfügbaren Antwortmöglichkeiten einer Frage und gibt sie sortiert nach der ID
 * aufsteigend zurück. Die ID der entsprechenden Frage wird als Parameter übergeben
 */
function survey_get_answers_from_question($question_id)
{
    $answers = array();
    $sql = "SELECT * FROM {question_possible_answers} WHERE question_id = " . $question_id . " ORDER BY answers_id";
    $answer_result = db_query($sql);
    foreach ($answer_result as $answer) {
        array_push($answers, $answer);
    }

    return $answers;
}

function survey_start_form()
{
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Start',
        '#submit' => array('survey_start_survey')
    );

    return $form;
}

function survey_start_survey()
{
    $string = survey_generateRandomString(30);
    $sql = "INSERT INTO {survey_users} (user_pw) VALUES ('" . $string . "')";
    db_query($sql);


    $id = survey_get_questions(0);
    drupal_goto("survey_question/" . $id . "/" . $string);
}

function survey_generateRandomString($length)
{
    $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    $charactersLength = strlen($characters);
    $randomString = '';
    for ($i = 0; $i < $length; $i++) {
        $randomString .= $characters[rand(0, $charactersLength - 1)];
    }
    return $randomString;
}

function survey_get_answers($question_id, $user_passcode)
{
    $object = array();
    $sql = "SELECT * FROM {question_user_answers} WHERE user_pw = '" . $user_passcode . "' AND question_id = " . $question_id;
    $result = db_query($sql);

    foreach ($result as $item) {
        array_push($object, $item);
    }


    return $object;

}

function survey_check_valid_user_pw($user_pw)
{

    $counter = 0;
    $sql = "SELECT * FROM {survey_users} WHERE user_pw = '" . $user_pw . "'";
    $result = db_query($sql);
    foreach ($result as $item) {
        $counter++;
    }

    if ($counter == 1) {
        return true;
    } else {
        return false;
    }
}

function survey_get_questions($current)
{

    $questions = array();
    $sql = "SELECT * FROM {question} ORDER BY question_id";
    $result = db_query($sql);

    foreach ($result as $item) {
        array_push($questions, $item);
    }


    if (sizeof($questions) >= $current + 1) {
        return $current + 1;
    } else {
        return -1;
    }
}
